// automatically generated by Xtext
grammar internship.Moda with org.eclipse.xtext.common.Terminals

import "http://www.irisa.fr/MODA/fig1" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

MODA returns MODA:
	{MODA}
	'MODA'
	name=EString
	'{'
		('sociotechnicalsystem' sociotechnicalsystem=SocioTechnicalSystem)?
		('data' '{' data+=Data ( "," data+=Data)* '}' )?
		('software' software=Software)?
		('model' '{' model+=Model ( "," model+=Model)* '}' )?
		('modelrole' '{' modelrole+=ModelRole ( "," modelrole+=ModelRole)* '}' )?
	'}';





ModelRole returns ModelRole:
	DescriptiveModel | PredictiveModel | PrescriptiveModel;




SocioTechnicalSystem returns SocioTechnicalSystem:
	{SocioTechnicalSystem}
	'SocioTechnicalSystem'
	'{'
		('data' '(' data+=[Data|EString] ( "," data+=[Data|EString])* ')' )?
		('prescriptivemodel' prescriptivemodel=[PrescriptiveModel|EString])?
	'}';

Data returns Data:
	{Data}
	'Data'
	'{'
		('dataType' dataType=DataTypes)?
		('software' software=[Software|EString])?
		('sociotechnicalsystem' sociotechnicalsystem=[SocioTechnicalSystem|EString])?
		('modelrole' modelrole=[ModelRole|EString])?
	'}';

Software returns Software:
	{Software}
	'Software'
	name=EString
	'{'
		('state' state=EString)?
		('data' '(' data+=[Data|EString] ( "," data+=[Data|EString])* ')' )?
		('prescriptivemodel' prescriptivemodel=[PrescriptiveModel|EString])?
	'}';

EString returns ecore::EString:
	STRING | ID;

Model returns Model:
	{Model}
	'Model'
	'{'
		('modelrole' '(' modelrole+=[ModelRole|EString] ( "," modelrole+=[ModelRole|EString])* ')' )?
	'}';

PrescriptiveModel returns PrescriptiveModel:
	'PrescriptiveModel'
	name=EString
	'{'
		'model' model=[Model|EString]
		('data' '(' data+=[Data|EString] ( "," data+=[Data|EString])* ')' )?
		('software' software=[Software|EString])?
		('sociotechnicalsystem' sociotechnicalsystem=[SocioTechnicalSystem|EString])?
		('predictivemodel' predictivemodel=[PredictiveModel|EString])?
		('prescriptivemodel' prescriptivemodel=[PrescriptiveModel|EString])?
		('prescriptivemodeleOpposite' prescriptivemodeleOpposite=[PrescriptiveModel|EString])?
	'}';

PredictiveModel returns PredictiveModel:
	'PredictiveModel'
	name=EString
	'{'
		'model' model=[Model|EString]
		('data' '(' data+=[Data|EString] ( "," data+=[Data|EString])* ')' )?
		('prescriptivemodel' prescriptivemodel=[PrescriptiveModel|EString])?
		('descriptivemodel' descriptivemodel=[DescriptiveModel|EString])?
	'}';

DescriptiveModel returns DescriptiveModel:
	'DescriptiveModel'
	name=EString
	'{'
		'model' model=[Model|EString]
		('data' '(' data+=[Data|EString] ( "," data+=[Data|EString])* ')' )?
		('predictivemodel' predictivemodel=[PredictiveModel|EString])?
	'}';

enum DataTypes returns DataTypes:
				InputData = 'InputData' | OutputData = 'OutputData' | ExternalData = 'ExternalData' | MeasuredData = 'MeasuredData';
