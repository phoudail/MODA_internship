// automatically generated by Xtext
grammar internship.MODA with org.eclipse.xtext.common.Terminals

import "http://www.irisa.fr/MODA/fig1"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

MODA returns MODA:
	{MODA}
	'MODA'
	name=EString
	':'
	((sociotechnicalsystem=SocioTechnicalSystem | sociotechnicalsystem=SoftwareGen)? &
	(data+=Data (data+=Data)*)? &
	(model+=Model ";")* &
	(relations+=ModaRelation (relations+=ModaRelation)*)?);



ModaRelation returns ModaRelation:
	OtherInterplay | DataPurpose | Enactment | Deployment | Preparation | Analysis | Generation | Generalization;

ModaNode returns ModaNode:
	Data | Software | SocioTechnicalSystem | Model;

EString returns ecore::EString:
	STRING | ID;

Analysis returns Analysis:
	{Analysis}
	'Analysis'
	name=EString
	':'
	(source=[ModaNode|EString])?
	'->'
	(target=[Model|EString])? ";";

Preparation returns Preparation:
	{Preparation}
	'Preparation'
	name=EString
	':'
	(source=[ModaNode|EString])?
	'->'
	(target=[Model|EString])? ";";

SoftwareGen returns SocioTechnicalSystem:
	{SocioTechnicalSystem}
	software=Software ';';

SocioTechnicalSystem returns SocioTechnicalSystem:
	{SocioTechnicalSystem}
	(software=Software 'within')? 'SocioTechnicalSystem' name=EString ';';

Software returns Software:
	{Software}
	name=EString 'as' 'Software'
//	(':'
//	('processing' '(' processing+=[DataPurpose|EString] ("," processing+=[DataPurpose|EString])* ')')? &
//	('incomingDeployment' incomingDeployment=[Deployment|EString])?)?
	;

Data returns Data:
	{Data}
	name=EString "as" ("Data" | ((inputData?="inputData" | outputData?="outputData" | externalData?="externalData" | measuredData?="measuredData"))
		("," (inputData?="inputData" | outputData?="outputData" | externalData?="externalData" | measuredData?="measuredData"))*
		
	) ';';
	
Model returns Model:
	{Model}
	name=EString 'as' ('Model' | ((
		prescriptiveModel?=('PrescriptiveModel' | 'Prescriptive') |
		descriptiveModel?=('DescriptiveModel' | 'Descriptive') |
		predictiveModel?=('PredictiveModel' | 'Predictive') )"," (
		prescriptiveModel?=('PrescriptiveModel' | 'Prescriptive') |
		descriptiveModel?=('DescriptiveModel' | 'Descriptive') |
		predictiveModel?=('PredictiveModel' | 'Predictive'))*)
	);


Enactment returns Enactment:
	{Enactment}
	'Enactment'
	name=EString
	':'
	(source=[Model|EString])?
	'->'
	(target=[SocioTechnicalSystem|EString])? ";";

Deployment returns Deployment:
	{Deployment}
	'Deployment'
	name=EString
	':'
	(source=[Model|EString])?
	'->'
	(target=[Software|EString])? ";";

Generation returns Generation:
	{Generation}
	'Generation'
	name=EString
	':'
	(source=[Model|EString])?
	'->'
	(target=[Model|EString])? ";";

DataPurpose returns DataPurpose:
	{DataPurpose}
	'process'
	name=EString
	':'
	((data=[Data|EString] ('as' dataKind=DataKind)) '->' (software=[Software|EString])) ";" |
	((software=[Software|EString]) '->' (data=[Data|EString] ('as' dataKind=DataKind))) ";";

enum DataKind returns DataKind:
	InputData='InputData' | OutputData='OutputData' | ExternalData='ExternalData' | MeasuredData='MeasuredData';


Generalization returns Generalization:
	{Generalization}
	'Generalization'
	name=EString
	':'
	(source+=[Data|EString] ("," source+=[Data|EString])*)?
	'->'
	(target=[Model|EString])? ";";

OtherInterplay returns OtherInterplay:
	'OtherInterplay'
	name=EString
	':'
	(data+=[Data|EString] ("," data+=[Data|EString])*)?
	'->'
	(sociotechnicalsystem=[SocioTechnicalSystem|EString])? ";";

